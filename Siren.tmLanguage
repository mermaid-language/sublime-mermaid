<?xml version="1.0" encoding="UTF-8"?>
<!--
  Sublime syntax definition for Siren Language.
  Author: Marcelo Camargo (https://github.com/haskellcamargo)
-->
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>siren</string>
  </array>
  <key>name</key>
  <string>Siren</string>
  <key>patterns</key>
  <array>
    <dict>
      <!-- Captures a single-line comment -->
      <key>comment</key>
      <string>Single line comment.</string>
      <key>match</key>
      <string>//.*$</string>
      <key>name</key>
      <string>comment.line.number-sign.Siren</string>
    </dict>
    <dict>
      <!-- Captures multiline siren comments -->
      <key>begin</key>
      <string>\(\*</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>comment.multiline.begin.Siren</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Multiline comment.</string>
      <key>end</key>
      <string>\*\)</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>comment.multiline.end.Siren</string>
        </dict>
      </dict>
      <key>name</key>
      <string>comment.Siren</string>
    </dict>
    <dict>
      <!-- Captures double-quoted string -->
      <key>begin</key>
      <string>"</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.Siren</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Double quoted string.</string>
      <key>end</key>
      <string>"</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.Siren</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.Siren</string>
    </dict>
    <dict>
      <!-- Captures single-quoted string -->
      <key>begin</key>
      <string>'</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.Siren</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Single quoted string.</string>
      <key>end</key>
      <string>'</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.Siren</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.Siren</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>string.Siren</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.Siren</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>string.quoted.other.Siren</string>
        </dict>
      </dict>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>storage.type.function.Siren</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Assign.</string>
      <key>match</key>
      <string>(&lt;-?)</string>
      <key>name</key>
      <string>assign.Siren</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Variables with dashes.</string>
      <key>match</key>
      <string>\w+(-\w)+</string>
      <key>name</key>
      <string>dashed.variables.Siren</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>support.function.method.Siren</string>
        </dict>
      </dict>
      <key>match</key>
      <string>\b([a-z][a-zA-Z0-9_\-]*)(\:(\s+|\s?\())\b</string>
      <key>name</key>
      <string>function.math.Siren</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>support.constant.math.Siren</string>
        </dict>
      </dict>
      <key>match</key>
      <string>\bMath\.(E|LN2|LN10|LOG2E|LOG10E|PI|SQRT1_2|SQRT2)\b</string>
      <key>name</key>
      <string>constants.math.Siren</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>support.function.console.Siren</string>
        </dict>
      </dict>
      <key>match</key>
      <string>\bconsole\.(debug|log|dir|errorinfo|log|time|trace|warn)\b</string>
      <key>name</key>
      <string>console.Siren</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#numeric</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#keywords</string>
    </dict>
    <dict>
      <key>include</key>
      <string>#operators</string>
    </dict>
  </array>
  <key>repository</key>
  <dict>
    <key>escape</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>name</key>
          <string>constant.character.escape</string>
        </dict>
      </array>
    </dict>
    <key>keywords</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>comment</key>
          <string>Keywords.</string>
          <key>match</key>
          <string>\b(do|arguments|const|delete|import( all)?|instanceof|let|def|new|require|typeof(!)?|var|window)\b</string>
          <key>name</key>
          <string>keyword.Siren</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Label.</string>
          <key>match</key>
          <string>^\s*:(\w+)</string>
          <key>name</key>
          <string>label.Siren</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Range keywords.</string>
          <key>match</key>
          <string>\b(by|from|til|to|[A-Z][a-z]*)\b</string>
          <key>name</key>
          <string>range.Siren</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(true|false)\b</string>
          <key>name</key>
          <string>constant.language.boolean.Siren</string>
        </dict>
        <dict>
          <key>match</key>
          <string>@[\w$\-_]*</string>
          <key>name</key>
          <string>constant.language.Siren</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(module|where|extend|let|with|use|in|using)\b</string>
          <key>name</key>
          <string>keyword.control.Siren</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\b(this|exposing)\b</string>
          <key>name</key>
          <string>variable.language.Siren</string>
        </dict>
      </array>
    </dict>
    <key>numeric</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>6</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>All numbers, different bases, decimals, underscores and trailing characters.</string>
          <key>match</key>
          <string>(?&lt;!\w)(\b(\d{1,2}~[\d\w]+)|(\d+[\d_]*(\.[\d_]+)?(e[+-]?[\d_]+)?(\w*))\b)</string>
          <key>name</key>
          <string>constant.numeric.Siren</string>
        </dict>
        <dict>
          <key>comment</key>
          <string>Magic numbers.</string>
          <key>match</key>
          <string>Infinity|NaN</string>
          <key>name</key>
          <string>support.constant.Siren</string>
        </dict>
      </array>
    </dict>
    <key>operators</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Assignment operators.</string>
          <key>match</key>
          <string>(?&lt;![\.?|&amp;:\+\-\*/%&lt;&gt;^])((\?{1}|\|{2}|&amp;{2})?(=(?!=)|:=|\+{1,2}=|-{1,2}=|\*{1,2}=|/=|%{1,2}=|&lt;\?=|&gt;\?=|\^=))</string>
          <key>name</key>
          <string>assignment.operators.Siren</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operators.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Relational operators.</string>
          <key>match</key>
          <string>(?&lt;!\.)((={2}|\bis(nt| not)?\b|!=|!?~=|&gt;=\?|&gt;=|&gt;|&lt;=\?|&lt;=|&lt;))</string>
          <key>name</key>
          <string>relational.operators.Siren</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operators.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Numeric operators.</string>
          <key>match</key>
          <string>(?&lt;!\.)((\+|-(?!-?&gt;)|\*|/|%|\^|\.&amp;\.|\.\|\.|\.\^\.|\.&gt;{2,3}\.|\.&lt;{2,3}\.|~))</string>
          <key>name</key>
          <string>numeric.operators.Siren</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>keyword.operators.Siren</string>
            </dict>
          </dict>
          <key>comment</key>
          <string>Boolean operators.</string>
          <key>match</key>
          <string>(?&lt;!\.)((\b(and|or|not|xor)\b)|(\B(\||\&amp;|\!)\B))</string>
          <key>name</key>
          <string>boolean.operators.Siren</string>
        </dict>
      </array>
    </dict>
  </dict>
  <key>scopeName</key>
  <string>source.Siren</string>
  <key>uuid</key>
  <string>3dd79e1c-6cf0-4302-947b-ef00aa5e2a8e</string>
</dict>
</plist>
